-- wishlists repository
CREATE TABLE lists (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	title text NOT NULL,
	color text DEFAULT '#0ea5e9' NOT NULL,
	description text,
	slug_public text NOT NULL,
	slug_private text NOT NULL,
	spoiler bool DEFAULT false NOT NULL,
	created TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);
COMMENT ON TABLE lists IS 'Wishlists';
COMMENT ON COLUMN lists.id IS 'Autogenerated list identity';
COMMENT ON COLUMN lists.title IS 'Heading of the Wishlist';
COMMENT ON COLUMN lists.color IS 'Color to personalize the Wishlist';
COMMENT ON COLUMN lists.description IS 'Longer description of the Wishlist';
COMMENT ON COLUMN lists.slug_public IS 'URL Segment to build public link';
COMMENT ON COLUMN lists.slug_private IS 'URL Segment to build private link';
COMMENT ON COLUMN lists.spoiler IS 'Show reservations and purchases on private view';
COMMENT ON COLUMN lists.created IS 'Timestamp of list creation';

-- wishlist item state
CREATE TYPE state AS ENUM ('open', 'reserved', 'purchased');

-- wishlist items repository
CREATE TABLE items (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	list bigint REFERENCES lists NOT NULL ON DELETE CASCADE,
	title text NOT NULL,
	price text,
	description text,
	links text[],
	state state DEFAULT 'open' NOT NULL,
	created TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
	modified TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);
COMMENT ON TABLE items IS 'Wishlist items';
COMMENT ON COLUMN items.id IS 'Autogenerated item identity';
COMMENT ON COLUMN items.list IS 'Reference to wishlist item belongs to';
COMMENT ON COLUMN items.title IS 'Heading of list item';
COMMENT ON COLUMN items.price IS 'Estimated price of list item';
COMMENT ON COLUMN items.description IS 'Longer description of list item';
COMMENT ON COLUMN items.links IS 'At least one link to a shop, where item can be bought';
COMMENT ON COLUMN items.state IS 'Item status, can be open, reserved or purchased';
COMMENT ON COLUMN items.created IS 'Timestamp of list item creation';
COMMENT ON COLUMN items.modified IS 'Timestamp of list item modification';

-- auto update modified field for wishlist items
CREATE EXTENSION IF NOT EXISTS moddatetime SCHEMA extensions;
CREATE TRIGGER handle_updated_at BEFORE UPDATE ON items 
	FOR EACH ROW EXECUTE PROCEDURE moddatetime (modified);
items_list_fkey
